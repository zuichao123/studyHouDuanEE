面向对象编程
1.结构化开发（面向过程）
	面向功能划分的软件结构
	从上到下，按步执行
	最小的粒度是方法
	步骤繁琐，制约了软件的可维护性和可扩展性
	代码一次成型，后续修改非常麻烦
2.面向对象开发
	把软件系统看成各种对象的集合
	系统结构稳定
	子系统相对独立
	软件的可维护性，可扩展性强

面向过程编程关注点在于每一个细节，每一步的具体操作。
面向对象关注点在于整个事件的参与对象，将系统中的
参与者全部看成模块化的对象。
汽车 司机 北京 天津

面向对象程序设计（Object Oriented Programming）OOP
就是把世间万物都看成一个个对象，
OOP是一种编程思想，思维模式，将程序中的所有参与者
模块化为对象，然后通过各种对象之间的相互作用关系来
完成程序的需求。

类和对象
类是对象的模版，抽象化的对象 Scanner工具类
Scanner scanner = new Scanner(System.in);
scanner.next();
Scanner scanner2 = new Scanner(System.in);

对象是类的具体实例化，具体化的类 scanner对象

程序中区分不同的个体，或者如何描述个体的特征
属性：对象具有的各种特征
每个对象的每个属性都拥有特定值
张三 李四
属性：name，birthday，height，weight
属性是描述对象的特征的，是静态的
车的品牌，颜色，排量都是静态的，是属性
让车跑到北京，是动态的功能，程序中用方法来描述
对象执行的操作，即其动态功能。
程序中使用方法来描述对象的动态功能，使用属性
来描述对象的静态特征，所以，对象是由一组属性和
方法构成，用来描述客观存在的一个实体。

与对象密不可分的另外一个概念是类。
类：具有相同属性和方法的一组对象的集合，类是对象
的抽象化描述，对象是类的具体实例。

对象和类是面向对象编程的核心。
所有的Java程序都是以类class为组织单元，一个Java文件就是一个类
真正执行程序是通过类的具体化对象来完成的。

具体的开发步骤：
1.定义类
public class 类名（首字母大写）{
	//定义属性，属性名符合驼峰式命名法
	访问权限修饰符(public) 数据类型 属性名;
	访问权限修饰符(public) 数据类型 属性名;
	...

	//定义方法，方法名符合驼峰式命名法
	访问权限修饰符 返回值类型 方法名(参数列表){
		方法体
	}
	...

} 

2.根据类来创建对象
通过调用类的构造函数/构造方法来创建
每一个类都有一个默认的无参构造方法，该方法不需要创建，由类自动生成。
构造方法语法：
访问权限修饰符 方法名/必须跟类名一模一样(参数列表){
	方法体
}

有参构造需要手动创建。
无参构造只创建对象，不完成对属性的赋值，需要在外部手动进行赋值。
有参构造边创建对象边完成对属性的赋值。

每个类都会有一个默认的无参构造，
如果手动在类中创建一个有参构造，会将默认的无参构造抹掉，如果一个类中有参和无参都需要，那么就必须手动将两种构造函数进行创建。

编写学员类，创建学员对象并输出相关信息
编写教师类，创建教师对象并输出相关信息